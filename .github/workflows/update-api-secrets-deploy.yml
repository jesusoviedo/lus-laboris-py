name: Update API Secrets & Deploy

on:
  workflow_dispatch:
    inputs:
      api_image_tag:
        description: Image tag to deploy (e.g., latest, 20250111)
        required: false
        default: latest
      update_secrets:
        description: Update secrets in Secret Manager
        required: false
        type: boolean
        default: true

jobs:
  update-and-deploy:
    name: Update Secrets & Deploy API
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GSA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Update Secrets in Secret Manager
      if: ${{ github.event.inputs.update_secrets == 'true' }}
      run: |
        echo "üìù Updating secrets in Secret Manager..."

        # Update .env file secret
        echo "${{ secrets.API_ENV_FILE }}" | \
          gcloud secrets versions add lus-laboris-api-env-file \
          --data-file=- \
          --project=${{ secrets.GCP_PROJECT_ID }}

        echo "‚úÖ .env secret updated"

        # Update JWT public key secret
        echo "${{ secrets.JWT_PUBLIC_KEY }}" | \
          gcloud secrets versions add lus-laboris-jwt-public-key \
          --data-file=- \
          --project=${{ secrets.GCP_PROJECT_ID }}

        echo "‚úÖ JWT public key secret updated"
        echo "‚úÖ All secrets updated successfully"

    - name: Deploy API to Cloud Run
      run: |
        IMAGE_TAG="${{ github.event.inputs.api_image_tag }}"
        SERVICE_NAME="${{ vars.GCP_CLOUD_RUN_API_SERVICE_NAME }}"
        REGION="${{ secrets.GCP_REGION }}"
        IMAGE="${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_RAG_API }}:${IMAGE_TAG}"

        echo "üöÄ Deploying ${IMAGE} to ${SERVICE_NAME}..."

        gcloud run deploy ${SERVICE_NAME} \
          --image=${IMAGE} \
          --region=${REGION} \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --port=8000 \
          --set-env-vars="API_HOST=0.0.0.0,API_PORT=8000,API_RELOAD=false,API_JWT_PUBLIC_KEY_PATH=/secrets/public_key.pem,API_ENV_FILE_PATH=/secrets/.env" \
          --update-secrets="/secrets/.env=lus-laboris-api-env-file:latest,/secrets/public_key.pem=lus-laboris-jwt-public-key:latest" \
          --cpu=1 \
          --memory=1Gi \
          --min-instances=0 \
          --max-instances=3 \
          --timeout=300s \
          --allow-unauthenticated

        echo "‚úÖ API deployed successfully!"

    - name: Get Service URL
      run: |
        SERVICE_NAME="${{ vars.GCP_CLOUD_RUN_API_SERVICE_NAME }}"
        REGION="${{ secrets.GCP_REGION }}"

        URL=$(gcloud run services describe ${SERVICE_NAME} \
          --region=${REGION} \
          --format='value(status.url)' \
          --project=${{ secrets.GCP_PROJECT_ID }})

        echo "üåê Service URL: ${URL}"
        echo "üìã Health Check: ${URL}/api/health"
        echo "üìä Status Endpoint: ${URL}/api/status"
