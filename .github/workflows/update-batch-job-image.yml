name: Update Batch Job Image

on:
  workflow_dispatch:

jobs:
  update-batch-job:
    name: Update Cloud Run Batch Job Image
    runs-on: ubuntu-latest
    env:
      # Secrets
      GSA_KEY: ${{ secrets.GSA_KEY }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      GCP_CLOUD_RUN_BATCH_ARGS: ${{ secrets.GCP_CLOUD_RUN_BATCH_ARGS }}
      # Variables
      GCP_CLOUD_RUN_BATCH_JOB_NAME: ${{ vars.GCP_CLOUD_RUN_BATCH_JOB_NAME }}
      DOCKER_IMAGE_NAME_PROCESSING: ${{ vars.DOCKER_IMAGE_NAME_PROCESSING }}
      GCP_CLOUD_RUN_BATCH_IMAGE_TAG: ${{ vars.GCP_CLOUD_RUN_BATCH_IMAGE_TAG }}
      GCP_BUCKET_NAME: ${{ vars.GCP_BUCKET_NAME }}
      GCP_CLOUD_RUN_BATCH_NOTIFY_EMAIL: ${{ vars.GCP_CLOUD_RUN_BATCH_NOTIFY_EMAIL }}

    steps:
    - id: checkout
      name: Checkout code
      uses: actions/checkout@v4

    - id: auth_gcp
      name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ env.GSA_KEY }}

    - id: setup_gcloud
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - id: update_job
      name: Update Cloud Run Job Image
      run: |
        IMAGE="${DOCKER_HUB_USERNAME}/${DOCKER_IMAGE_NAME_PROCESSING}:${GCP_CLOUD_RUN_BATCH_IMAGE_TAG}"

        echo "üöÄ Updating ${GCP_CLOUD_RUN_BATCH_JOB_NAME} to ${IMAGE}..."

        # Expand environment variables in args
        # Replace placeholders like ${GCP_BUCKET_NAME} with actual values
        EXPANDED_ARGS=$(echo "${GCP_CLOUD_RUN_BATCH_ARGS}" | \
          sed "s|\${GCP_BUCKET_NAME}|${GCP_BUCKET_NAME}|g" | \
          sed "s|\${GCP_CLOUD_RUN_BATCH_NOTIFY_EMAIL}|${GCP_CLOUD_RUN_BATCH_NOTIFY_EMAIL}|g")

        echo "üìã Job arguments (raw): ${EXPANDED_ARGS}"

        # Convert space-separated args to comma-separated format for gcloud
        # This allows proper parsing of individual arguments
        COMMA_SEPARATED_ARGS=$(echo "${EXPANDED_ARGS}" | sed 's/ /,/g')

        echo "üìã Job arguments (formatted): ${COMMA_SEPARATED_ARGS}"

        if gcloud run jobs update ${GCP_CLOUD_RUN_BATCH_JOB_NAME} \
          --image=${IMAGE} \
          --args="${COMMA_SEPARATED_ARGS}" \
          --region=${GCP_REGION} \
          --project=${GCP_PROJECT_ID}; then
          echo "‚úÖ Job updated successfully!"
        else
          echo "‚ùå Job update failed! Getting details..."

          # Get job details
          echo "üìã Job details:"
          gcloud run jobs describe ${GCP_CLOUD_RUN_BATCH_JOB_NAME} \
            --region=${GCP_REGION} \
            --project=${GCP_PROJECT_ID} \
            --format=yaml || true

          exit 1
        fi

    - id: verify_job
      name: Verify Job Configuration
      run: |
        echo "üîç Verifying job configuration..."

        # Get full job description in JSON format
        JOB_CONFIG=$(gcloud run jobs describe ${GCP_CLOUD_RUN_BATCH_JOB_NAME} \
          --region=${GCP_REGION} \
          --project=${GCP_PROJECT_ID} \
          --format=json)

        # Extract image from JSON
        IMAGE_DEPLOYED=$(echo "$JOB_CONFIG" | jq -r '.spec.template.spec.template.spec.containers[0].image // empty')

        echo "üì¶ Image deployed: ${IMAGE_DEPLOYED}"

        # Extract args from JSON
        ARGS_DEPLOYED=$(echo "$JOB_CONFIG" | jq -r '.spec.template.spec.template.spec.containers[0].args // empty | join(" ")')

        echo "üìã Arguments deployed: ${ARGS_DEPLOYED}"

        # Verify image matches
        EXPECTED_IMAGE="${DOCKER_HUB_USERNAME}/${DOCKER_IMAGE_NAME_PROCESSING}:${GCP_CLOUD_RUN_BATCH_IMAGE_TAG}"
        if [ "${IMAGE_DEPLOYED}" = "${EXPECTED_IMAGE}" ]; then
          echo "‚úÖ Image verification passed!"
        else
          echo "‚ùå Image mismatch!"
          echo "   Expected: ${EXPECTED_IMAGE}"
          echo "   Got: ${IMAGE_DEPLOYED}"
          exit 1
        fi

    - id: get_job_info
      name: Display Job Information
      run: |
        echo "üìä Cloud Run Job Information:"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        echo "Job Name: ${GCP_CLOUD_RUN_BATCH_JOB_NAME}"
        echo "Region: ${GCP_REGION}"
        echo "Image: ${DOCKER_HUB_USERNAME}/${DOCKER_IMAGE_NAME_PROCESSING}:${GCP_CLOUD_RUN_BATCH_IMAGE_TAG}"
        echo ""
        echo "üìÖ Next scheduled execution:"
        gcloud scheduler jobs describe ${GCP_CLOUD_RUN_BATCH_JOB_NAME}-schedule \
          --location=${GCP_REGION} \
          --project=${GCP_PROJECT_ID} \
          --format='value(schedule)' || echo "No schedule configured"
        echo ""
        echo "üîß To execute manually:"
        echo "gcloud run jobs execute ${GCP_CLOUD_RUN_BATCH_JOB_NAME} --region=${GCP_REGION}"
